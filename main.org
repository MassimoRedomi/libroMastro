#+title: Libro Mastro
#+author: José Santos L.
* Headers
** Basic libraries
   sono librerie che non credo di aver bisogno di spiegare cosa fanno.
   #+begin_src c :tangle yes
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <stdbool.h>/*aggiunge i boolean var*/
#include <math.h>

#define clear() printf("\033[H\033[J") 

   #+end_src
** specific libraries
   #+begin_src c :tangle yes
#include <unistd.h> /*Header file per sleep()*/
#include <pthread.h> /*per fare i thread*/

   #+end_src
* structures
  Le strutture sono gruppi di variabili che rapressentano un
  oggetto della vita reale.
** utente
   #+begin_src c :tangle yes
struct Utente{
   int id;
   float budget;
};

   #+end_src
** Transazione
   Una transazione è caratterizzata dalle seguenti informazioni:
   • timestamp della transazione con risoluzione dei nanosecondi (si 
     veda funzione clock_gettime(...))
   • sender (implicito, in quanto è l’utente che ha generato la 
     transazione)
   • receiver, utente destinatario della somma
   • quantità di denaro inviata.
   • reward, denaro pagato dal sender al nodo che processa la 
     transazione.

   La transazione è inviata dal processo utente che la genera ad uno 
   dei processi nodo, scelto a caso.
   #+begin_src c :tangle yes
struct Transazione{
   struct Utente sender;
   struct Utente receiver;
   float quantita;
   float reward;
};

   #+end_src
** Node
   #+begin_src c :tangle yes
struct Nodo{

};
   #+end_src

* main
  #+begin_src c :tangle yes
int main(int argc,char *argv[]){
   if(argc<2){
      printf("si aspettava un file con la configurazione.\n");
      exit(EXIT_FAILURE);
   }else if(argc>2){
      printf("troppi argomenti.\n");
      exit(EXIT_FAILURE);
   }else{
      printf("tutto a posto\n");
   }
   return 0;
}
  #+end_src
